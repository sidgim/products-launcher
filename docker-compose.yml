version: '3.8'

services:
  nats-server:
    image: nats:latest
    ports:
      - "8222:8222"
  orders-db:
    container_name: orders_db
    image: postgres:16.2
    restart: always
    volumes:
      - ./orders-ms/postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=ordersdb

  client-gateway:
    build: ./client-gateway
    ports:
      - "${CLIENT_GATEWAY_PORT}:3000"
    volumes:
      - ./client-gateway/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3000
      - NATS_SERVERS=${NATS_SERVERS}

  products-ms:
    build: ./products-ms
    volumes:
      - ./products-ms/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3001
      - NATS_SERVERS=${NATS_SERVERS}
      - DATABASE_URL=file:./dev.db

  orders-ms:
    depends_on:
      - orders-db
    build: ./orders-ms
    volumes:
      - ./orders-ms/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3002
      - NATS_SERVERS=${NATS_SERVERS}
      - DATABASE_URL=postgres://postgres:123456@orders-db:5432/ordersdb?schema=public

  payments-ms:
    build: ./payments-ms
    ports:
      - "${PAYMENTS_MS_PORT}:${PAYMENTS_MS_PORT}"
    volumes:
      - ./payments-ms/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=${PAYMENTS_MS_PORT}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - WEBHOOK_SECRET=${WEBHOOK_SECRET}
      - SUCCESS_URL=${SUCCESS_URL}
      - CANCEL_URL=${CANCEL_URL}
      - NATS_SERVERS=${NATS_SERVERS}